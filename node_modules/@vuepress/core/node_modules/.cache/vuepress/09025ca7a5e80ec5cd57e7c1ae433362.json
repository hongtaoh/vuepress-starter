{"remainingRequest":"/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/Tal/Desktop/onlinebook/vuepress-starter/docs/plots/01-plots-female-continent.md?vue&type=template&id=6928c334&","dependencies":[{"path":"/Users/Tal/Desktop/onlinebook/vuepress-starter/docs/plots/01-plots-female-continent.md","mtime":1611002812506},{"path":"/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgIkNvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yIiwKICAgIHsgYXR0cnM6IHsgInNsb3Qta2V5IjogX3ZtLiRwYXJlbnQuc2xvdEtleSB9IH0sCiAgICBbCiAgICAgIF9jKCJoMSIsIHsgYXR0cnM6IHsgaWQ6ICJmZW1hbGUtcGFydGljaXBhdGlvbi1hY3Jvc3MtY29udGluZW50cyIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIjZmVtYWxlLXBhcnRpY2lwYXRpb24tYWNyb3NzLWNvbnRpbmVudHMiIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBGZW1hbGUgUGFydGljaXBhdGlvbiBBY3Jvc3MgQ29udGluZW50cyIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIlRvIHZpc3VhbGl6ZSBjaGFuZ2VzIGluIGZlbWFsZSBwYXJ0aWNpcGF0aW9uIGluIGVhY2ggY29udGluZW50LCB3ZSBmaXJzdCB1c2VkIGEgc2ltcGxlIGxpbmUgZ3JhcGggd2hlcmUgd2UgcHV0IGFsbCB0aGUgY29udGluZW50IHRvZ2V0aGVyLiBUaGUgeC1heGlzIGlzIHRpbWUsIGFuZCB0aGUgeS1heGlzIGlzIGZlbWFsZSBwYXJ0aWNpcGF0aW9uLiBUaGUgbGVnZW5kIHNob3dzIHRoZSBjb2xvcnMgYXNzb2NpYXRlZCB3aXRoIHRoZSBjb250aW5lbnRzLiBTZWUgRmlndXJlIDI1LiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImZpZ3VyZSIsIFsKICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgc3JjOgogICAgICAgICAgICAgICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vaG9uZ3Rhb2gvb2x5bXZpcy9tYXN0ZXIvc3RhdGljL3BpY3MvZy0yLTFfbmV3LnBuZyIKICAgICAgICAgIH0KICAgICAgICB9KSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygiZmlnY2FwdGlvbiIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIlxuICBcdEZpZ3VyZSAyNTogTGluZSBncmFwaCBmb3IgZmVtYWxlIHBhcnRpY2lwYXRpb24gYnkgY29udGluZW50XG4gICIKICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJUaGUgZ3JhcGggd2FzIHZlcnkgbWVzc3kuIEFzIHRoZXJlIHdlcmUgc2l4IGNvbnRpbmVudHMgYW5kIG9uZSBnbG9iYWwgYXZlcmFnZSwgd2UgY291bGQgbm90IGRpc3Rpbmd1aXNoIGJldHdlZW4gdGhlIHNldmVuIGNhdGVnb3JpZXMgdmVyeSBlYXNpbHkuIFNvIHdlIGdhdmUgdXAgdGhpcyBvcHRpb24uIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiVGhlbiB3ZSB0cmllZCBhIHNtYWxsIG11bHRpcGxlIGluIHdoaWNoIGVhY2ggY29udGluZW50IGFuZCB0aGUgZ2xvYmFsIGF2ZXJhZ2Ugd2VyZSBzaG93biBpbiBzaW1wbGUgbGluZSBncmFwaHMuIFRoaXMgY2hhcnQgc2hvd2VkIGV2ZXJ5IGNvbnRpbmVudCBjbGVhcmx5IGJ1dCBpdCB3YXMgbm90IHZlcnkgZWFzeSB0byBtYWtlIGEgY29tcGFyaXNvbi4gU2VlIEZpZ3VyZSAyNi4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJmaWd1cmUiLCBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIHNyYzoKICAgICAgICAgICAgICAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2hvbmd0YW9oL29seW12aXMvbWFzdGVyL3N0YXRpYy9waWNzL2ctMi0yLnBuZyIKICAgICAgICAgIH0KICAgICAgICB9KSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygiZmlnY2FwdGlvbiIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIlxuICBcdEZpZ3VyZSAyNjogTGluZSBncmFwaCBpbiBzbWFsbCBtdWx0aXBsZSBmb3IgZmVtYWxlIHBhcnRpY2lwYXRpb24gYnkgY29udGluZW50XG4gICIKICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJUbyBtYWtlIGNvbXBhcmlzb25zIGNsZWFyZXIsIHdlIGRlY2lkZWQgdG8gdXNlIGFuIGFyZWEgY2hhcnQuIFdlIHN0YWNrZWQgZWFjaCBhcmVhIGNoYXJ0IGVhY2ggcmVwcmVzZW50aW5nIGEgY29udGluZW50IGFsb25nIGEgdmVydGljYWwgbGluZS4gSG93ZXZlciwgY29tcGFyaXNvbnMgd2VyZSBzdGlsbCBkaWZmaWN1bHQuIE1vc3QgaW1wb3J0YW50bHksIGluIHRlcm1zIG9mIHVzaW5nIGNvbG9yIGFzIHRoZSB2aXN1YWwgZW5jb2RpbmcsIHRoaXMgZ3JhcGggaGFzIHRvbyBtYW55IGNhdGVnb3JpZXMuIEJlc2lkZXMsIGl0IGhhcyByZWQgYW5kIGdyZWVuIGF0IHRoZSBzYW1lIHRpbWUsIGFuZCB0aGVyZWZvcmUgaXMgbm90IGFjY2Vzc2libGUgdG8gY29sb3JibGluZCBwb3B1bGF0aW9ucy4gU2VlIEZpZ3VyZSAyNy4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJmaWd1cmUiLCBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIHNyYzoKICAgICAgICAgICAgICAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2hvbmd0YW9oL29seW12aXMvbWFzdGVyL3N0YXRpYy9waWNzL2ctMi00X25ldy5wbmciCiAgICAgICAgICB9CiAgICAgICAgfSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImZpZ2NhcHRpb24iLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJcbiAgXHRGaWd1cmUgMjc6IFN0YWNrZWQgYmFyIGNoYXJ0IGZvciBmZW1hbGUgcGFydGljaXBhdGlvbiBieSBjb250aW5lbnRcbiAgIgogICAgICAgICAgKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIldlIHRoZW4gd2VudCBiYWNrIHRvIHRoZSBzbWFsbCBtdWx0aXBsZS4gU2luY2Ugd2UgY2FyZWQgYWJvdXQgdGhlIGNvbXBhcmlzb24gYmV0d2VlbiBlYWNoIGNvbnRpbmVudCwgd2UgZGVjaWRlZCB0byBwbG90IGV2ZXJ5IGNvbnRpbmVudCBhbmQgdGhlIGdsb2JhbCBhdmVyYWdlIGluIGVhY2ggb2YgdGhlIHNpeCBncmFwaHMuIFdlIGhpZ2hsaWdodGVkIG9ubHkgb25lIGNvbnRpbmVudCBpbiBlYWNoIGdyYXBoLCBhbmQgc2V0IGFsbCBvdGhlciBjb250aW5lbnRzIGdyZXkgaW4gdGhlIGJhY2tncm91bmQuIEl0IHdvcmtlZCBtdWNoIGJldHRlciB0aGFuIG91dCBlYXJsaWVyIGF0dGVtcHRzLCBidXQgb25lIGRyYXdiYWNrIGlzIHRoYXQgaXQgZGlkIG5vdCBhbGxvdyBjb21wYXJpc29uIHdpdGggdGhlIGdsb2JhbCBhdmVyYWdlLiBTZWUgRmlndXJlIDI4LiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImZpZ3VyZSIsIFsKICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgc3JjOgogICAgICAgICAgICAgICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vaG9uZ3Rhb2gvb2x5bXZpcy9tYXN0ZXIvc3RhdGljL3BpY3MvZy0yLTUucG5nIgogICAgICAgICAgfQogICAgICAgIH0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJmaWdjYXB0aW9uIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiXG4gIFx0RmlndXJlIDI4OiBMaW5lIGdyYXBoIGluIHNtYWxsIG11bHRpcGxlIGZvciBmZW1hbGUgcGFydGljaXBhdGlvbiBieSBjb250aW5lbnQgYWdhaW5zdCBhbGwgb3RoZXIgZ3JvdXBzXG4gICIKICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJGaW5hbGx5LCB3ZSBkZWNpZGVkIHRvIGhpZ2hsaWdodCB0aGUgZ2xvYmFsIGF2ZXJhZ2Ugd2l0aCBhIGJsYWNrIGxpbmUuIFRoaXMgdGltZSwgY29tcGFyaXNvbnMgYm90aCBiZXR3ZWVuIGNvbnRpbmVudHMgYW5kIHdpdGggdGhlIGdsb2JhbCBhdmVyYWdlIHdlcmUgY2xlYXIuIFNlZSBGaWd1cmUgMjkuIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiZmlndXJlIiwgWwogICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICBzcmM6CiAgICAgICAgICAgICAgImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9ob25ndGFvaC9vbHltdmlzL21hc3Rlci9zdGF0aWMvcGljcy9nLTItNi5wbmciCiAgICAgICAgICB9CiAgICAgICAgfSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImZpZ2NhcHRpb24iLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJcbiAgXHRGaWd1cmUgMjk6IExpbmUgZ3JhcGggaW4gc21hbGwgbXVsdGlwbGUgZm9yIGZlbWFsZSBwYXJ0aWNpcGF0aW9uIGJ5IGNvbnRpbmVudCBhZ2FpbnN0IGdsb2JhbCBzdGF0aXN0aWNzXG4gICIKICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKQogICAgXQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}
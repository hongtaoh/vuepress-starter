{"remainingRequest":"/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/Tal/Desktop/onlinebook/vuepress-starter/docs/motivation/_index.md?vue&type=template&id=04ff2577&","dependencies":[{"path":"/Users/Tal/Desktop/onlinebook/vuepress-starter/docs/motivation/_index.md","mtime":1610730779791},{"path":"/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgIkNvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yIiwKICAgIHsgYXR0cnM6IHsgInNsb3Qta2V5IjogX3ZtLiRwYXJlbnQuc2xvdEtleSB9IH0sCiAgICBbCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJUaGUgbW9kZXJuIE9seW1waWMgR2FtZXMgYXJlIHRoZSBncmVhdGVzdCBzcG9ydHMgbWVnYS1ldmVudCBpbiB0aGUgd29ybGQgKEdyaXgsIDIwMTMpLiBJdCBnZW5lcmF0ZXMgYSBtYXNzaXZlIG51bWJlciBvZiAgYXVkaWVuY2VzIHdvcmxkd2lkZS4gVGhlIGxhdGVzdCBSaW8gMjAxNiBPbHltcGljcywgZm9yIGV4YW1wbGUsIGF0dHJhY3RlZCAzLjUgYmlsbGlvbiB2aWV3ZXJzIChSb3hib3Vyb3VnaCwgMjAxNiksIGhhbGYgb2YgdGhlIHdvcmxkIHBvcHVsYXRpb24uIEFwYXJ0IGZyb20gdGhpcyBtb2JpbGl6aW5nIHBvd2VyLCB0aGUgT2x5bXBpYyBHYW1lcyBoYXZlIHNpZ25pZmljYW50IHBvbGl0aWNhbCAoR2l1bGlhbm90aWksIDIwMTU7IENvdHRyZWxsICYgTmVsc29uLCAyMDEwOyBNYWNBbG9vbiwgMTk5NSksIGVjb25vbWljIChNYWRkZW4sIDIwMDI7IEJsYWtlLCAyMDA1OyBPc2FkYSwgT2ppbWEsIEt1cmFjaGksIE1pdXJhLCAmIEthd2Ftb3RvLCAyMDE2KSwgYW5kIHNvY2lvLWN1bHR1cmFsIChNYWxmYXMsIFRoZW9kb3Jha2ksICYgSG91bGloYW4sIDIwMDQpIGltcGFjdHMuIEl0IGFsc28gY29udHJpYnV0ZXMgdG8gZ2xvYmFsIGZyaWVuZHNoaXAgYW5kIGNvb3BlcmF0aW9uIChCZXV0bGVyLCAyMDA4KS4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJHZW5kZXIgZXF1YWxpdHkgaW4gc3BvcnRzIGhhcyBiZWVuIGEgaG90IHRvcGljIChNZXJ2b3NoICYgQ2Fyb24sIDIwMTkpLiBEZWJhdGVzIG9uIHRoaXMgaXNzdWUgaGF2ZSByZXZvbHZlZCBhcm91bmQgZXF1YWwgcGF5IGFuZCBtZWRpYSBjb3ZlcmFnZSAoQmFrZXIsIFNleW1vdXIsICYgWmltYmFsaXN0LCAyMDE5KS4gVGhlcmUgaGFzIGxvbmcgYmVlbiBhbiBvYnZpb3VzIGdlbmRlciBwYXkgZ2FwIGluIHNwb3J0cyAoQWJyYW1zLCAyMDE5OyBGYXJtZXIsIDIwMTcpLiBGb3IgZXhhbXBsZSwgb2YgdGhlIDEwMCBhdGhsZXRlcyBvbiB0aGUgMjAxOSBGb3JiZXMgbGlzdCBvZiB0aGUgd29ybGTigJlzIGhpZ2hlc3QtcGFpZCBhdGhsZXRlcywgb25seSBvbmUgb2YgdGhlbSBpcyBhIHdvbWFuLiBpLmUuLCBTZXJlbmEgV2lsbGlhbXMsIHdobyBpcyByYW5rZWQgNjN0aCBvbiB0aGUgbGlzdC4gVGhlcmUgaGFzIGFsc28gYmVlbiBhIGxhY2sgb2YgbWVkaWEgY292ZXJhZ2Ugb24gd29tZW4gaW4gc3BvcnRzLiBBbHRob3VnaCA0MCUgb2YgYWxsIHNwb3J0cyBwYXJ0aWNpcGFudHMgYXJlIGZlbWFsZSwgb25seSA0JSBvZiB0aGUgc3BvcnRzIG1lZGlhIGNvdmVyYWdlIHdlcmUgYWJvdXQgZmVtYWxlIGF0aGxldGVzIChNYWNLZW56aWUsIDIwMTkpLiBBIHN0dWR5IChDb29reSwgTWVzc25lciwgJiBNdXN0bywgMjAxNSkgZXhhbWluaW5nIHNwb3J0cyBjb3ZlcmFnZSBmcm9tIDE5ODkgdG8gMjAxNCBmb3VuZCB0aGF0IGRlc3BpdGUgYSBkcmFtYXRpYyBpbmNyZWFzZSBpbiB0aGUgbnVtYmVyIG9mIHdvbWVuIHBsYXlpbmcgc3BvcnRzIChHb29kLCAyMDE1KSwgdGhlcmUgaGFkIGJlZW4gYSBkZWNyZWFzZSBpbiB0aGUgYW1vdW50IG9mIGNvdmVyYWdlIG9mIGZlbWFsZSBhdGhsZXRlcy4gVW5kZXIgdGhpcyBiYWNrZHJvcCwgd2UgYWltIHRvIGxvb2sgYXQgZmVtYWxlIHBhcnRpY2lwYXRpb24gYWNyb3NzIHRoZSBnbG9iZSBpbiB0aGUgU3VtbWVyIE9seW1waWMgR2FtZXMgb2YgdGhlIHBhc3QgMTIwIHllYXJzLiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIlJlY2VudGx5LCB0aGVyZSBoYXMgYmVlbiBhIHRyZW5kIHRoYXQgZmV3ZXIgY2l0aWVzIHdhbnQgdG8gaG9zdCB0aGUgT2x5bXBpY3MsIGNoYWxsZW5naW5nIHRoZSBmdXR1cmUgb2YgYSBjZW50dXJ5LW9sZCB0cmFkaXRpb24gKEdvbGRibGF0dCwgMjAxNikuIEZvciBleGFtcGxlLCAxMiBjaXRpZXMgYmlkIGZvciAyMDA0IFN1bW1lciBPbHltcGljcyBidXQgb25seSB0d28gZm9yIHRoZSAyMDIwIFdpbnRlciBnYW1lcyAoTHVkYWNlciwgMjAxOCkuIENvbnNpZGVyaW5nIHRoZSBpbXBvcnRhbmNlIG9mIE9seW1waWMgc3VjY2VzcyBpbiBuYXRpb25hbCBwcmlkZSAoTW93ZXIsIDIwMTIpLCBhIGhvbWUtZmllbGQgYWR2YW50YWdlIGluIHRoZSBPbHltcGljcyBtaWdodCBlbmNvdXJhZ2UgY291bnRyaWVzIHRvIGJpZCBmb3IgaG9zdGluZyB0aGUgbWVnYS1ldmVudC4gVGhlcmVmb3JlLCBpdCBpcyB3b3J0aCBpbnZlc3RpZ2F0aW5nIHdoZXRoZXIgdGhpcyBhZHZhbnRhZ2UgZXhpc3RzIGluIHRoZSBPbHltcGljcywgYW5kIGhvdyBzaWduaWZpY2FudCBpdCBpcy4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJBbHRob3VnaCBlYXJuaW5nIG1lZGFscyBjYW4gYm9vc3QgbmF0aW9uYWwgcHJpZGUsIGNvdW50cmllcyBhcmUgbm90IOKAnGJvcm4gZXF1YWzigJ0gaW4gdGVybXMgb2YgdGhlaXIgYWJpbGl0eSB0byBhY2hpZXZlIE9seW1waWMgc3VjY2Vzcy4gU3R1ZGllcyBoYXZlIGRlbW9uc3RyYXRlZCB0aGF0IHBvcHVsYXRpb24gc2l6ZXMgYW5kIGVjb25vbWljIGRldmVsb3BtZW50IGZvciBhIGxhcmdlIHBhcnQgZGV0ZXJtaW5lZCBhIGNvdW50cnnigJlzIE9seW1waWMgcGVyZm9ybWFuY2UgKFNvb3MsIE1hcnRpbmV6LCAmIFN6YWJvLCAyMDE3OyBYdW4sIDIwMDU7IEJlcm5hcmQgJiBCdXNzZSwgMjAwNCkuIEhvd2V2ZXIsIHdlIHRoaW5rIGl04oCZcyB1bmZhaXIgdG8gY29tcGFyZSBTaW5nYXBvcmUgd2l0aCB0aGUgVW5pdGVkIFN0YXRlcyBpbiB0ZXJtcyBvZiB0b3RhbCBudW1iZXIgb2YgbWVkYWxzIGVhcm5lZCwgYmVjYXVzZSB0aGUgdHdvIGNvdW50cmllcyBoYXZlIHRvdGFsbHkgZGlmZmVyZW50IHBvcHVsYXRpb24gc2l6ZS4gV2hhdCBpcyBtb3JlIGltcG9ydGFudCBpcyDigJxtZWRhbCBlZmZpY2llbmN54oCdLCBpLmUuLCBtZWRhbCBjb3VudHMgcGVyIGF0aGxldGUgcGFydGljaXBhdGluZyBpbiB0aGUgT2x5bXBpY3MuIEluIG90aGVyIHdvcmRzLCB3ZSBhcmUgbW9yZSBjb25jZXJuZWQgYWJvdXQgaG93IGVmZmVjdGl2ZSBhIGNvdW50cnkgaXMgdG8gZWFybiBtZWRhbHMsIHJhdGhlciB0aGFuIHRoZSB0b3RhbCBudW1iZXIgb2YgbWVkYWxzIGVhcm5lZC4gV2UgYWltIHRvIGxvb2sgYXQgaG93IHRoaXMg4oCcbWVkYWwgZWZmaWNpZW5jeeKAnSBkaWZmZXJzIGJldHdlZW4gY291bnRyaWVzLiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIkFwYXJ0IGZyb20gaXRzIHNpZ25pZmljYW5jZSBmb3Igc29jaWV0aWVzIGF0IGxhcmdlLCBPbHltcGljcyBpcyBhc3NvY2lhdGVkIHdpdGggaW5kaXZpZHVhbHPigJkgaGVhbHRoIGFzIHdlbGwgKFNhbmRlcmNvY29rLCBCZWVkaWUsICYgIE1hbm4sIDIwMTYpLiBQZW9wbGUgbWlnaHQgYmUgaW5zcGlyZWQgYnkgdGhlIE9seW1waWNzIGFuZCBtb3JlIGFjdGl2ZWx5IGVuZ2FnZSBpbiBwaHlzaWNhbCBhY3Rpdml0aWVzLiBCZXNpZGVzIGl0cyBiZW5lZml0cyBmb3IgcGh5c2ljYWwgaGVhbHRoIChXYXJidXJ0b24sIE5pY29sLCAmIEJyZWRpbiwgMjAwNiksIGl0IGhhcyBwc3ljaG9sb2dpY2FsIGJlbmVmaXRzIGFzIHdlbGwgKEdoaWxkaXlhbCwgMjAxNSkuIEZvciBleGFtcGxlLCBwbGF5aW5nIHNwb3J0cyBjYW4gaGVscCBidWlsZCBvbmXigJlzIGNoYXJhY3RlcnMuIFdpdGggdGhlIGltcG9ydGFuY2Ugb2Ygc3BvcnRzIGluIG1pbmQsIHdlIHdhbnQgdG8gZXhhbWluZSB3aGljaCBzcG9ydHMgaW4gdGhlIE9seW1waWNzIGhpc3RvcnkgaGF2ZSB0aGUgaGlnaGVzdCBudW1iZXIgb2YgcGFydGljaXBhbnRzLiIKICAgICAgICApCiAgICAgIF0pCiAgICBdCiAgKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}
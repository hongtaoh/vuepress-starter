{"remainingRequest":"/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/Tal/Desktop/onlinebook/vuepress-starter/docs/motivation/motivation.md?vue&type=template&id=245fcd58&","dependencies":[{"path":"/Users/Tal/Desktop/onlinebook/vuepress-starter/docs/motivation/motivation.md","mtime":1610995256220},{"path":"/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Tal/Desktop/onlinebook/vuepress-starter/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgIkNvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yIiwKICAgIHsgYXR0cnM6IHsgInNsb3Qta2V5IjogX3ZtLiRwYXJlbnQuc2xvdEtleSB9IH0sCiAgICBbCiAgICAgIF9jKCJoMSIsIHsgYXR0cnM6IHsgaWQ6ICJtb3RpdmF0aW9uIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiNtb3RpdmF0aW9uIiB9IH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBNb3RpdmF0aW9uIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiVGhlIG1vZGVybiBPbHltcGljIEdhbWVzIGFyZSB0aGUgZ3JlYXRlc3Qgc3BvcnRzIG1lZ2EtZXZlbnQgaW4gdGhlIHdvcmxkIChHcml4LCAyMDEzKS4gSXQgZ2VuZXJhdGVzIGEgbWFzc2l2ZSBudW1iZXIgb2YgIGF1ZGllbmNlcyB3b3JsZHdpZGUuIFRoZSBsYXRlc3QgUmlvIDIwMTYgT2x5bXBpY3MsIGZvciBleGFtcGxlLCBhdHRyYWN0ZWQgMy41IGJpbGxpb24gdmlld2VycyAoUm94Ym91cm91Z2gsIDIwMTYpLCBoYWxmIG9mIHRoZSB3b3JsZCBwb3B1bGF0aW9uLiBBcGFydCBmcm9tIHRoaXMgbW9iaWxpemluZyBwb3dlciwgdGhlIE9seW1waWMgR2FtZXMgaGF2ZSBzaWduaWZpY2FudCBwb2xpdGljYWwgKEdpdWxpYW5vdGlpLCAyMDE1OyBDb3R0cmVsbCAmIE5lbHNvbiwgMjAxMDsgTWFjQWxvb24sIDE5OTUpLCBlY29ub21pYyAoTWFkZGVuLCAyMDAyOyBCbGFrZSwgMjAwNTsgT3NhZGEsIE9qaW1hLCBLdXJhY2hpLCBNaXVyYSwgJiBLYXdhbW90bywgMjAxNiksIGFuZCBzb2Npby1jdWx0dXJhbCAoTWFsZmFzLCBUaGVvZG9yYWtpLCAmIEhvdWxpaGFuLCAyMDA0KSBpbXBhY3RzLiBJdCBhbHNvIGNvbnRyaWJ1dGVzIHRvIGdsb2JhbCBmcmllbmRzaGlwIGFuZCBjb29wZXJhdGlvbiAoQmV1dGxlciwgMjAwOCkuIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiR2VuZGVyIGVxdWFsaXR5IGluIHNwb3J0cyBoYXMgYmVlbiBhIGhvdCB0b3BpYyAoTWVydm9zaCAmIENhcm9uLCAyMDE5KS4gRGViYXRlcyBvbiB0aGlzIGlzc3VlIGhhdmUgcmV2b2x2ZWQgYXJvdW5kIGVxdWFsIHBheSBhbmQgbWVkaWEgY292ZXJhZ2UgKEJha2VyLCBTZXltb3VyLCAmIFppbWJhbGlzdCwgMjAxOSkuIFRoZXJlIGhhcyBsb25nIGJlZW4gYW4gb2J2aW91cyBnZW5kZXIgcGF5IGdhcCBpbiBzcG9ydHMgKEFicmFtcywgMjAxOTsgRmFybWVyLCAyMDE3KS4gRm9yIGV4YW1wbGUsIG9mIHRoZSAxMDAgYXRobGV0ZXMgb24gdGhlIDIwMTkgRm9yYmVzIGxpc3Qgb2YgdGhlIHdvcmxk4oCZcyBoaWdoZXN0LXBhaWQgYXRobGV0ZXMsIG9ubHkgb25lIG9mIHRoZW0gaXMgYSB3b21hbi4gaS5lLiwgU2VyZW5hIFdpbGxpYW1zLCB3aG8gaXMgcmFua2VkIDYzdGggb24gdGhlIGxpc3QuIFRoZXJlIGhhcyBhbHNvIGJlZW4gYSBsYWNrIG9mIG1lZGlhIGNvdmVyYWdlIG9uIHdvbWVuIGluIHNwb3J0cy4gQWx0aG91Z2ggNDAlIG9mIGFsbCBzcG9ydHMgcGFydGljaXBhbnRzIGFyZSBmZW1hbGUsIG9ubHkgNCUgb2YgdGhlIHNwb3J0cyBtZWRpYSBjb3ZlcmFnZSB3ZXJlIGFib3V0IGZlbWFsZSBhdGhsZXRlcyAoTWFjS2VuemllLCAyMDE5KS4gQSBzdHVkeSAoQ29va3ksIE1lc3NuZXIsICYgTXVzdG8sIDIwMTUpIGV4YW1pbmluZyBzcG9ydHMgY292ZXJhZ2UgZnJvbSAxOTg5IHRvIDIwMTQgZm91bmQgdGhhdCBkZXNwaXRlIGEgZHJhbWF0aWMgaW5jcmVhc2UgaW4gdGhlIG51bWJlciBvZiB3b21lbiBwbGF5aW5nIHNwb3J0cyAoR29vZCwgMjAxNSksIHRoZXJlIGhhZCBiZWVuIGEgZGVjcmVhc2UgaW4gdGhlIGFtb3VudCBvZiBjb3ZlcmFnZSBvZiBmZW1hbGUgYXRobGV0ZXMuIFVuZGVyIHRoaXMgYmFja2Ryb3AsIHdlIGFpbSB0byBsb29rIGF0IGZlbWFsZSBwYXJ0aWNpcGF0aW9uIGFjcm9zcyB0aGUgZ2xvYmUgaW4gdGhlIFN1bW1lciBPbHltcGljIEdhbWVzIG9mIHRoZSBwYXN0IDEyMCB5ZWFycy4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJSZWNlbnRseSwgdGhlcmUgaGFzIGJlZW4gYSB0cmVuZCB0aGF0IGZld2VyIGNpdGllcyB3YW50IHRvIGhvc3QgdGhlIE9seW1waWNzLCBjaGFsbGVuZ2luZyB0aGUgZnV0dXJlIG9mIGEgY2VudHVyeS1vbGQgdHJhZGl0aW9uIChHb2xkYmxhdHQsIDIwMTYpLiBGb3IgZXhhbXBsZSwgMTIgY2l0aWVzIGJpZCBmb3IgMjAwNCBTdW1tZXIgT2x5bXBpY3MgYnV0IG9ubHkgdHdvIGZvciB0aGUgMjAyMCBXaW50ZXIgZ2FtZXMgKEx1ZGFjZXIsIDIwMTgpLiBDb25zaWRlcmluZyB0aGUgaW1wb3J0YW5jZSBvZiBPbHltcGljIHN1Y2Nlc3MgaW4gbmF0aW9uYWwgcHJpZGUgKE1vd2VyLCAyMDEyKSwgYSBob21lLWZpZWxkIGFkdmFudGFnZSBpbiB0aGUgT2x5bXBpY3MgbWlnaHQgZW5jb3VyYWdlIGNvdW50cmllcyB0byBiaWQgZm9yIGhvc3RpbmcgdGhlIG1lZ2EtZXZlbnQuIFRoZXJlZm9yZSwgaXQgaXMgd29ydGggaW52ZXN0aWdhdGluZyB3aGV0aGVyIHRoaXMgYWR2YW50YWdlIGV4aXN0cyBpbiB0aGUgT2x5bXBpY3MsIGFuZCBob3cgc2lnbmlmaWNhbnQgaXQgaXMuIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiQWx0aG91Z2ggZWFybmluZyBtZWRhbHMgY2FuIGJvb3N0IG5hdGlvbmFsIHByaWRlLCBjb3VudHJpZXMgYXJlIG5vdCDigJxib3JuIGVxdWFs4oCdIGluIHRlcm1zIG9mIHRoZWlyIGFiaWxpdHkgdG8gYWNoaWV2ZSBPbHltcGljIHN1Y2Nlc3MuIFN0dWRpZXMgaGF2ZSBkZW1vbnN0cmF0ZWQgdGhhdCBwb3B1bGF0aW9uIHNpemVzIGFuZCBlY29ub21pYyBkZXZlbG9wbWVudCBmb3IgYSBsYXJnZSBwYXJ0IGRldGVybWluZWQgYSBjb3VudHJ54oCZcyBPbHltcGljIHBlcmZvcm1hbmNlIChTb29zLCBNYXJ0aW5leiwgJiBTemFibywgMjAxNzsgWHVuLCAyMDA1OyBCZXJuYXJkICYgQnVzc2UsIDIwMDQpLiBIb3dldmVyLCB3ZSB0aGluayBpdOKAmXMgdW5mYWlyIHRvIGNvbXBhcmUgU2luZ2Fwb3JlIHdpdGggdGhlIFVuaXRlZCBTdGF0ZXMgaW4gdGVybXMgb2YgdG90YWwgbnVtYmVyIG9mIG1lZGFscyBlYXJuZWQsIGJlY2F1c2UgdGhlIHR3byBjb3VudHJpZXMgaGF2ZSB0b3RhbGx5IGRpZmZlcmVudCBwb3B1bGF0aW9uIHNpemUuIFdoYXQgaXMgbW9yZSBpbXBvcnRhbnQgaXMg4oCcbWVkYWwgZWZmaWNpZW5jeeKAnSwgaS5lLiwgbWVkYWwgY291bnRzIHBlciBhdGhsZXRlIHBhcnRpY2lwYXRpbmcgaW4gdGhlIE9seW1waWNzLiBJbiBvdGhlciB3b3Jkcywgd2UgYXJlIG1vcmUgY29uY2VybmVkIGFib3V0IGhvdyBlZmZlY3RpdmUgYSBjb3VudHJ5IGlzIHRvIGVhcm4gbWVkYWxzLCByYXRoZXIgdGhhbiB0aGUgdG90YWwgbnVtYmVyIG9mIG1lZGFscyBlYXJuZWQuIFdlIGFpbSB0byBsb29rIGF0IGhvdyB0aGlzIOKAnG1lZGFsIGVmZmljaWVuY3nigJ0gZGlmZmVycyBiZXR3ZWVuIGNvdW50cmllcy4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJBcGFydCBmcm9tIGl0cyBzaWduaWZpY2FuY2UgZm9yIHNvY2lldGllcyBhdCBsYXJnZSwgT2x5bXBpY3MgaXMgYXNzb2NpYXRlZCB3aXRoIGluZGl2aWR1YWxz4oCZIGhlYWx0aCBhcyB3ZWxsIChTYW5kZXJjb2NvaywgQmVlZGllLCAmICBNYW5uLCAyMDE2KS4gUGVvcGxlIG1pZ2h0IGJlIGluc3BpcmVkIGJ5IHRoZSBPbHltcGljcyBhbmQgbW9yZSBhY3RpdmVseSBlbmdhZ2UgaW4gcGh5c2ljYWwgYWN0aXZpdGllcy4gQmVzaWRlcyBpdHMgYmVuZWZpdHMgZm9yIHBoeXNpY2FsIGhlYWx0aCAoV2FyYnVydG9uLCBOaWNvbCwgJiBCcmVkaW4sIDIwMDYpLCBpdCBoYXMgcHN5Y2hvbG9naWNhbCBiZW5lZml0cyBhcyB3ZWxsIChHaGlsZGl5YWwsIDIwMTUpLiBGb3IgZXhhbXBsZSwgcGxheWluZyBzcG9ydHMgY2FuIGhlbHAgYnVpbGQgb25l4oCZcyBjaGFyYWN0ZXJzLiBXaXRoIHRoZSBpbXBvcnRhbmNlIG9mIHNwb3J0cyBpbiBtaW5kLCB3ZSB3YW50IHRvIGV4YW1pbmUgd2hpY2ggc3BvcnRzIGluIHRoZSBPbHltcGljcyBoaXN0b3J5IGhhdmUgdGhlIGhpZ2hlc3QgbnVtYmVyIG9mIHBhcnRpY2lwYW50cy4iCiAgICAgICAgKQogICAgICBdKQogICAgXQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}